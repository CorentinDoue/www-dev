security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        entity_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            provider: entity_provider
            json_login:
                check_path: /login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        register:
            pattern:  ^/register
            stateless: true
            anonymous: true

        api:
            pattern:  ^/api
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

#        api:
#            pattern:  ^/api
#            stateless: true
#            anonymous: false
#            provider: entity_provider
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator
        default:
            pattern: /
            anonymous: true

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }

    role_hierarchy:
            ROLE_ASSO:  ROLE_USER
            ROLE_ADMIN: ROLE_ASSO

